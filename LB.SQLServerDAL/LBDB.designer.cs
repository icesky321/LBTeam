#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LB.SQLServerDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LvBao")]
	public partial class LBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAspnet_Applications(Aspnet_Applications instance);
    partial void UpdateAspnet_Applications(Aspnet_Applications instance);
    partial void DeleteAspnet_Applications(Aspnet_Applications instance);
    partial void InsertAspnet_Membership(Aspnet_Membership instance);
    partial void UpdateAspnet_Membership(Aspnet_Membership instance);
    partial void DeleteAspnet_Membership(Aspnet_Membership instance);
    partial void InsertAspnet_Paths(Aspnet_Paths instance);
    partial void UpdateAspnet_Paths(Aspnet_Paths instance);
    partial void DeleteAspnet_Paths(Aspnet_Paths instance);
    partial void InsertAspnet_PersonalizationAllUsers(Aspnet_PersonalizationAllUsers instance);
    partial void UpdateAspnet_PersonalizationAllUsers(Aspnet_PersonalizationAllUsers instance);
    partial void DeleteAspnet_PersonalizationAllUsers(Aspnet_PersonalizationAllUsers instance);
    partial void InsertAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void UpdateAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void DeleteAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void InsertAspnet_Profile(Aspnet_Profile instance);
    partial void UpdateAspnet_Profile(Aspnet_Profile instance);
    partial void DeleteAspnet_Profile(Aspnet_Profile instance);
    partial void InsertAspnet_Roles(Aspnet_Roles instance);
    partial void UpdateAspnet_Roles(Aspnet_Roles instance);
    partial void DeleteAspnet_Roles(Aspnet_Roles instance);
    partial void InsertAspnet_SchemaVersions(Aspnet_SchemaVersions instance);
    partial void UpdateAspnet_SchemaVersions(Aspnet_SchemaVersions instance);
    partial void DeleteAspnet_SchemaVersions(Aspnet_SchemaVersions instance);
    partial void InsertAspnet_Users(Aspnet_Users instance);
    partial void UpdateAspnet_Users(Aspnet_Users instance);
    partial void DeleteAspnet_Users(Aspnet_Users instance);
    partial void InsertAspnet_UsersInRoles(Aspnet_UsersInRoles instance);
    partial void UpdateAspnet_UsersInRoles(Aspnet_UsersInRoles instance);
    partial void DeleteAspnet_UsersInRoles(Aspnet_UsersInRoles instance);
    partial void InsertAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void UpdateAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void DeleteAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void InsertCopInfo(CopInfo instance);
    partial void UpdateCopInfo(CopInfo instance);
    partial void DeleteCopInfo(CopInfo instance);
    partial void InsertNewsInfo(NewsInfo instance);
    partial void UpdateNewsInfo(NewsInfo instance);
    partial void DeleteNewsInfo(NewsInfo instance);
    partial void InsertNewsType(NewsType instance);
    partial void UpdateNewsType(NewsType instance);
    partial void DeleteNewsType(NewsType instance);
    partial void InsertTradeleads(Tradeleads instance);
    partial void UpdateTradeleads(Tradeleads instance);
    partial void DeleteTradeleads(Tradeleads instance);
    partial void InsertTSInfo(TSInfo instance);
    partial void UpdateTSInfo(TSInfo instance);
    partial void DeleteTSInfo(TSInfo instance);
    partial void InsertUnitInfo(UnitInfo instance);
    partial void UpdateUnitInfo(UnitInfo instance);
    partial void DeleteUnitInfo(UnitInfo instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertUserTypeInfo(UserTypeInfo instance);
    partial void UpdateUserTypeInfo(UserTypeInfo instance);
    partial void DeleteUserTypeInfo(UserTypeInfo instance);
    #endregion
		
		public LBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aspnet_Applications> Aspnet_Applications
		{
			get
			{
				return this.GetTable<Aspnet_Applications>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Membership> Aspnet_Membership
		{
			get
			{
				return this.GetTable<Aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Paths> Aspnet_Paths
		{
			get
			{
				return this.GetTable<Aspnet_Paths>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_PersonalizationAllUsers> Aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<Aspnet_PersonalizationAllUsers>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUser
		{
			get
			{
				return this.GetTable<Aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Profile> Aspnet_Profile
		{
			get
			{
				return this.GetTable<Aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Roles> Aspnet_Roles
		{
			get
			{
				return this.GetTable<Aspnet_Roles>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_SchemaVersions> Aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<Aspnet_SchemaVersions>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Users> Aspnet_Users
		{
			get
			{
				return this.GetTable<Aspnet_Users>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_UsersInRoles> Aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<Aspnet_UsersInRoles>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_WebEvent_Events> Aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<Aspnet_WebEvent_Events>();
			}
		}
		
		public System.Data.Linq.Table<CopInfo> CopInfo
		{
			get
			{
				return this.GetTable<CopInfo>();
			}
		}
		
		public System.Data.Linq.Table<NewsInfo> NewsInfo
		{
			get
			{
				return this.GetTable<NewsInfo>();
			}
		}
		
		public System.Data.Linq.Table<NewsType> NewsType
		{
			get
			{
				return this.GetTable<NewsType>();
			}
		}
		
		public System.Data.Linq.Table<Tradeleads> Tradeleads
		{
			get
			{
				return this.GetTable<Tradeleads>();
			}
		}
		
		public System.Data.Linq.Table<TruckInfo> TruckInfo
		{
			get
			{
				return this.GetTable<TruckInfo>();
			}
		}
		
		public System.Data.Linq.Table<TSInfo> TSInfo
		{
			get
			{
				return this.GetTable<TSInfo>();
			}
		}
		
		public System.Data.Linq.Table<TSType> TSType
		{
			get
			{
				return this.GetTable<TSType>();
			}
		}
		
		public System.Data.Linq.Table<UnitInfo> UnitInfo
		{
			get
			{
				return this.GetTable<UnitInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfo
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserNoticeInfo> UserNoticeInfo
		{
			get
			{
				return this.GetTable<UserNoticeInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserTypeInfo> UserTypeInfo
		{
			get
			{
				return this.GetTable<UserTypeInfo>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Applications> Vw_aspnet_Applications
		{
			get
			{
				return this.GetTable<Vw_aspnet_Applications>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_MembershipUsers> Vw_aspnet_MembershipUsers
		{
			get
			{
				return this.GetTable<Vw_aspnet_MembershipUsers>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Profiles> Vw_aspnet_Profiles
		{
			get
			{
				return this.GetTable<Vw_aspnet_Profiles>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Roles> Vw_aspnet_Roles
		{
			get
			{
				return this.GetTable<Vw_aspnet_Roles>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Users> Vw_aspnet_Users
		{
			get
			{
				return this.GetTable<Vw_aspnet_Users>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_UsersInRoles> Vw_aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<Vw_aspnet_UsersInRoles>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_Paths> Vw_aspnet_WebPartState_Paths
		{
			get
			{
				return this.GetTable<Vw_aspnet_WebPartState_Paths>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_Shared> Vw_aspnet_WebPartState_Shared
		{
			get
			{
				return this.GetTable<Vw_aspnet_WebPartState_Shared>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_User> Vw_aspnet_WebPartState_User
		{
			get
			{
				return this.GetTable<Vw_aspnet_WebPartState_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class Aspnet_Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<Aspnet_Membership> _Aspnet_Membership;
		
		private EntitySet<Aspnet_Paths> _Aspnet_Paths;
		
		private EntitySet<Aspnet_Roles> _Aspnet_Roles;
		
		private EntitySet<Aspnet_Users> _Aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Aspnet_Applications()
		{
			this._Aspnet_Membership = new EntitySet<Aspnet_Membership>(new Action<Aspnet_Membership>(this.attach_Aspnet_Membership), new Action<Aspnet_Membership>(this.detach_Aspnet_Membership));
			this._Aspnet_Paths = new EntitySet<Aspnet_Paths>(new Action<Aspnet_Paths>(this.attach_Aspnet_Paths), new Action<Aspnet_Paths>(this.detach_Aspnet_Paths));
			this._Aspnet_Roles = new EntitySet<Aspnet_Roles>(new Action<Aspnet_Roles>(this.attach_Aspnet_Roles), new Action<Aspnet_Roles>(this.detach_Aspnet_Roles));
			this._Aspnet_Users = new EntitySet<Aspnet_Users>(new Action<Aspnet_Users>(this.attach_Aspnet_Users), new Action<Aspnet_Users>(this.detach_Aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Membership", Storage="_Aspnet_Membership", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Aspnet_Membership> Aspnet_Membership
		{
			get
			{
				return this._Aspnet_Membership;
			}
			set
			{
				this._Aspnet_Membership.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Paths", Storage="_Aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Aspnet_Paths> Aspnet_Paths
		{
			get
			{
				return this._Aspnet_Paths;
			}
			set
			{
				this._Aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Roles", Storage="_Aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Aspnet_Roles> Aspnet_Roles
		{
			get
			{
				return this._Aspnet_Roles;
			}
			set
			{
				this._Aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Users", Storage="_Aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Aspnet_Users> Aspnet_Users
		{
			get
			{
				return this._Aspnet_Users;
			}
			set
			{
				this._Aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aspnet_Membership(Aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = this;
		}
		
		private void detach_Aspnet_Membership(Aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = null;
		}
		
		private void attach_Aspnet_Paths(Aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = this;
		}
		
		private void detach_Aspnet_Paths(Aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = null;
		}
		
		private void attach_Aspnet_Roles(Aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = this;
		}
		
		private void detach_Aspnet_Roles(Aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = null;
		}
		
		private void attach_Aspnet_Users(Aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = this;
		}
		
		private void detach_Aspnet_Users(Aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Applications = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class Aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<Aspnet_Applications> _Aspnet_Applications;
		
		private EntityRef<Aspnet_Users> _Aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Aspnet_Membership()
		{
			this._Aspnet_Applications = default(EntityRef<Aspnet_Applications>);
			this._Aspnet_Users = default(EntityRef<Aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Membership", Storage="_Aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Applications Aspnet_Applications
		{
			get
			{
				return this._Aspnet_Applications.Entity;
			}
			set
			{
				Aspnet_Applications previousValue = this._Aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Applications.Entity = null;
						previousValue.Aspnet_Membership.Remove(this);
					}
					this._Aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Membership.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Applications");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_Membership", Storage="_Aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Aspnet_Users Aspnet_Users
		{
			get
			{
				return this._Aspnet_Users.Entity;
			}
			set
			{
				Aspnet_Users previousValue = this._Aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Users.Entity = null;
						previousValue.Aspnet_Membership = null;
					}
					this._Aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class Aspnet_Paths : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<Aspnet_PersonalizationAllUsers> _Aspnet_PersonalizationAllUsers;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Aspnet_PersonalizationPerUser;
		
		private EntityRef<Aspnet_Applications> _Aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public Aspnet_Paths()
		{
			this._Aspnet_PersonalizationAllUsers = default(EntityRef<Aspnet_PersonalizationAllUsers>);
			this._Aspnet_PersonalizationPerUser = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Aspnet_PersonalizationPerUser), new Action<Aspnet_PersonalizationPerUser>(this.detach_Aspnet_PersonalizationPerUser));
			this._Aspnet_Applications = default(EntityRef<Aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Paths_Aspnet_PersonalizationAllUsers", Storage="_Aspnet_PersonalizationAllUsers", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public Aspnet_PersonalizationAllUsers Aspnet_PersonalizationAllUsers
		{
			get
			{
				return this._Aspnet_PersonalizationAllUsers.Entity;
			}
			set
			{
				Aspnet_PersonalizationAllUsers previousValue = this._Aspnet_PersonalizationAllUsers.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_PersonalizationAllUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_PersonalizationAllUsers.Entity = null;
						previousValue.Aspnet_Paths = null;
					}
					this._Aspnet_PersonalizationAllUsers.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Paths = this;
					}
					this.SendPropertyChanged("Aspnet_PersonalizationAllUsers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Paths_Aspnet_PersonalizationPerUser", Storage="_Aspnet_PersonalizationPerUser", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUser
		{
			get
			{
				return this._Aspnet_PersonalizationPerUser;
			}
			set
			{
				this._Aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Paths", Storage="_Aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Applications Aspnet_Applications
		{
			get
			{
				return this._Aspnet_Applications.Entity;
			}
			set
			{
				Aspnet_Applications previousValue = this._Aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Applications.Entity = null;
						previousValue.Aspnet_Paths.Remove(this);
					}
					this._Aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Paths = this;
		}
		
		private void detach_Aspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Paths = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class Aspnet_PersonalizationAllUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_Paths> _Aspnet_Paths;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Aspnet_PersonalizationAllUsers()
		{
			this._Aspnet_Paths = default(EntityRef<Aspnet_Paths>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._Aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Paths_Aspnet_PersonalizationAllUsers", Storage="_Aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public Aspnet_Paths Aspnet_Paths
		{
			get
			{
				return this._Aspnet_Paths.Entity;
			}
			set
			{
				Aspnet_Paths previousValue = this._Aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Paths.Entity = null;
						previousValue.Aspnet_PersonalizationAllUsers = null;
					}
					this._Aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.Aspnet_PersonalizationAllUsers = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Paths");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class Aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_Paths> _Aspnet_Paths;
		
		private EntityRef<Aspnet_Users> _Aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Aspnet_PersonalizationPerUser()
		{
			this._Aspnet_Paths = default(EntityRef<Aspnet_Paths>);
			this._Aspnet_Users = default(EntityRef<Aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._Aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Paths_Aspnet_PersonalizationPerUser", Storage="_Aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public Aspnet_Paths Aspnet_Paths
		{
			get
			{
				return this._Aspnet_Paths.Entity;
			}
			set
			{
				Aspnet_Paths previousValue = this._Aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Paths.Entity = null;
						previousValue.Aspnet_PersonalizationPerUser.Remove(this);
					}
					this._Aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.Aspnet_PersonalizationPerUser.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Aspnet_Paths");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_PersonalizationPerUser", Storage="_Aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Aspnet_Users Aspnet_Users
		{
			get
			{
				return this._Aspnet_Users.Entity;
			}
			set
			{
				Aspnet_Users previousValue = this._Aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Users.Entity = null;
						previousValue.Aspnet_PersonalizationPerUser.Remove(this);
					}
					this._Aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.Aspnet_PersonalizationPerUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class Aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_Users> _Aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Aspnet_Profile()
		{
			this._Aspnet_Users = default(EntityRef<Aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_Profile", Storage="_Aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Aspnet_Users Aspnet_Users
		{
			get
			{
				return this._Aspnet_Users.Entity;
			}
			set
			{
				Aspnet_Users previousValue = this._Aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Users.Entity = null;
						previousValue.Aspnet_Profile = null;
					}
					this._Aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class Aspnet_Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<Aspnet_UsersInRoles> _Aspnet_UsersInRoles;
		
		private EntityRef<Aspnet_Applications> _Aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Aspnet_Roles()
		{
			this._Aspnet_UsersInRoles = new EntitySet<Aspnet_UsersInRoles>(new Action<Aspnet_UsersInRoles>(this.attach_Aspnet_UsersInRoles), new Action<Aspnet_UsersInRoles>(this.detach_Aspnet_UsersInRoles));
			this._Aspnet_Applications = default(EntityRef<Aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Roles_Aspnet_UsersInRoles", Storage="_Aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<Aspnet_UsersInRoles> Aspnet_UsersInRoles
		{
			get
			{
				return this._Aspnet_UsersInRoles;
			}
			set
			{
				this._Aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Roles", Storage="_Aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Applications Aspnet_Applications
		{
			get
			{
				return this._Aspnet_Applications.Entity;
			}
			set
			{
				Aspnet_Applications previousValue = this._Aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Applications.Entity = null;
						previousValue.Aspnet_Roles.Remove(this);
					}
					this._Aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aspnet_UsersInRoles(Aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Roles = this;
		}
		
		private void detach_Aspnet_UsersInRoles(Aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class Aspnet_SchemaVersions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public Aspnet_SchemaVersions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class Aspnet_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<Aspnet_Membership> _Aspnet_Membership;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Aspnet_PersonalizationPerUser;
		
		private EntityRef<Aspnet_Profile> _Aspnet_Profile;
		
		private EntitySet<Aspnet_UsersInRoles> _Aspnet_UsersInRoles;
		
		private EntityRef<Aspnet_Applications> _Aspnet_Applications;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public Aspnet_Users()
		{
			this._Aspnet_Membership = default(EntityRef<Aspnet_Membership>);
			this._Aspnet_PersonalizationPerUser = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Aspnet_PersonalizationPerUser), new Action<Aspnet_PersonalizationPerUser>(this.detach_Aspnet_PersonalizationPerUser));
			this._Aspnet_Profile = default(EntityRef<Aspnet_Profile>);
			this._Aspnet_UsersInRoles = new EntitySet<Aspnet_UsersInRoles>(new Action<Aspnet_UsersInRoles>(this.attach_Aspnet_UsersInRoles), new Action<Aspnet_UsersInRoles>(this.detach_Aspnet_UsersInRoles));
			this._Aspnet_Applications = default(EntityRef<Aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_Membership", Storage="_Aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Aspnet_Membership Aspnet_Membership
		{
			get
			{
				return this._Aspnet_Membership.Entity;
			}
			set
			{
				Aspnet_Membership previousValue = this._Aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Membership.Entity = null;
						previousValue.Aspnet_Users = null;
					}
					this._Aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Users = this;
					}
					this.SendPropertyChanged("Aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_PersonalizationPerUser", Storage="_Aspnet_PersonalizationPerUser", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUser
		{
			get
			{
				return this._Aspnet_PersonalizationPerUser;
			}
			set
			{
				this._Aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_Profile", Storage="_Aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Aspnet_Profile Aspnet_Profile
		{
			get
			{
				return this._Aspnet_Profile.Entity;
			}
			set
			{
				Aspnet_Profile previousValue = this._Aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Profile.Entity = null;
						previousValue.Aspnet_Users = null;
					}
					this._Aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Users = this;
					}
					this.SendPropertyChanged("Aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_UsersInRoles", Storage="_Aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Aspnet_UsersInRoles> Aspnet_UsersInRoles
		{
			get
			{
				return this._Aspnet_UsersInRoles;
			}
			set
			{
				this._Aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Applications_Aspnet_Users", Storage="_Aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Applications Aspnet_Applications
		{
			get
			{
				return this._Aspnet_Applications.Entity;
			}
			set
			{
				Aspnet_Applications previousValue = this._Aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Applications.Entity = null;
						previousValue.Aspnet_Users.Remove(this);
					}
					this._Aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.Aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Users = this;
		}
		
		private void detach_Aspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Users = null;
		}
		
		private void attach_Aspnet_UsersInRoles(Aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Users = this;
		}
		
		private void detach_Aspnet_UsersInRoles(Aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Aspnet_Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class Aspnet_UsersInRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Aspnet_Roles> _Aspnet_Roles;
		
		private EntityRef<Aspnet_Users> _Aspnet_Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Aspnet_UsersInRoles()
		{
			this._Aspnet_Roles = default(EntityRef<Aspnet_Roles>);
			this._Aspnet_Users = default(EntityRef<Aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Aspnet_Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Roles_Aspnet_UsersInRoles", Storage="_Aspnet_Roles", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Aspnet_Roles Aspnet_Roles
		{
			get
			{
				return this._Aspnet_Roles.Entity;
			}
			set
			{
				Aspnet_Roles previousValue = this._Aspnet_Roles.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Roles.Entity = null;
						previousValue.Aspnet_UsersInRoles.Remove(this);
					}
					this._Aspnet_Roles.Entity = value;
					if ((value != null))
					{
						value.Aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aspnet_Users_Aspnet_UsersInRoles", Storage="_Aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Aspnet_Users Aspnet_Users
		{
			get
			{
				return this._Aspnet_Users.Entity;
			}
			set
			{
				Aspnet_Users previousValue = this._Aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aspnet_Users.Entity = null;
						previousValue.Aspnet_UsersInRoles.Remove(this);
					}
					this._Aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.Aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class Aspnet_WebEvent_Events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public Aspnet_WebEvent_Events()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CopInfo")]
	public partial class CopInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CopId;
		
		private string _CopName;
		
		private System.Nullable<int> _UserId;
		
		private string _Bizlicense;
		
		private System.Nullable<bool> _BAuthentication;
		
		private string _HWPermit;
		
		private System.Nullable<bool> _HWAuthentication;
		
		private string _CopDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCopIdChanging(int value);
    partial void OnCopIdChanged();
    partial void OnCopNameChanging(string value);
    partial void OnCopNameChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnBizlicenseChanging(string value);
    partial void OnBizlicenseChanged();
    partial void OnBAuthenticationChanging(System.Nullable<bool> value);
    partial void OnBAuthenticationChanged();
    partial void OnHWPermitChanging(string value);
    partial void OnHWPermitChanged();
    partial void OnHWAuthenticationChanging(System.Nullable<bool> value);
    partial void OnHWAuthenticationChanged();
    partial void OnCopDetailChanging(string value);
    partial void OnCopDetailChanged();
    #endregion
		
		public CopInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CopId
		{
			get
			{
				return this._CopId;
			}
			set
			{
				if ((this._CopId != value))
				{
					this.OnCopIdChanging(value);
					this.SendPropertyChanging();
					this._CopId = value;
					this.SendPropertyChanged("CopId");
					this.OnCopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopName", DbType="NVarChar(100)")]
		public string CopName
		{
			get
			{
				return this._CopName;
			}
			set
			{
				if ((this._CopName != value))
				{
					this.OnCopNameChanging(value);
					this.SendPropertyChanging();
					this._CopName = value;
					this.SendPropertyChanged("CopName");
					this.OnCopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bizlicense", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Bizlicense
		{
			get
			{
				return this._Bizlicense;
			}
			set
			{
				if ((this._Bizlicense != value))
				{
					this.OnBizlicenseChanging(value);
					this.SendPropertyChanging();
					this._Bizlicense = value;
					this.SendPropertyChanged("Bizlicense");
					this.OnBizlicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAuthentication", DbType="Bit")]
		public System.Nullable<bool> BAuthentication
		{
			get
			{
				return this._BAuthentication;
			}
			set
			{
				if ((this._BAuthentication != value))
				{
					this.OnBAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._BAuthentication = value;
					this.SendPropertyChanged("BAuthentication");
					this.OnBAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HWPermit", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string HWPermit
		{
			get
			{
				return this._HWPermit;
			}
			set
			{
				if ((this._HWPermit != value))
				{
					this.OnHWPermitChanging(value);
					this.SendPropertyChanging();
					this._HWPermit = value;
					this.SendPropertyChanged("HWPermit");
					this.OnHWPermitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HWAuthentication", DbType="Bit")]
		public System.Nullable<bool> HWAuthentication
		{
			get
			{
				return this._HWAuthentication;
			}
			set
			{
				if ((this._HWAuthentication != value))
				{
					this.OnHWAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._HWAuthentication = value;
					this.SendPropertyChanged("HWAuthentication");
					this.OnHWAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopDetail", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CopDetail
		{
			get
			{
				return this._CopDetail;
			}
			set
			{
				if ((this._CopDetail != value))
				{
					this.OnCopDetailChanging(value);
					this.SendPropertyChanging();
					this._CopDetail = value;
					this.SendPropertyChanged("CopDetail");
					this.OnCopDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsInfo")]
	public partial class NewsInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _NoteTime;
		
		private string _Content;
		
		private string _UserName;
		
		private System.Nullable<bool> _IsShow;
		
		private System.Nullable<bool> _IsCommend;
		
		private System.Nullable<int> _NewsTypeId;
		
		private System.Nullable<int> _Hits;
		
		private System.Nullable<System.DateTime> _ShowTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnNoteTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsShowChanging(System.Nullable<bool> value);
    partial void OnIsShowChanged();
    partial void OnIsCommendChanging(System.Nullable<bool> value);
    partial void OnIsCommendChanged();
    partial void OnNewsTypeIdChanging(System.Nullable<int> value);
    partial void OnNewsTypeIdChanged();
    partial void OnHitsChanging(System.Nullable<int> value);
    partial void OnHitsChanged();
    partial void OnShowTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnShowTimeChanged();
    #endregion
		
		public NewsInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoteTime
		{
			get
			{
				return this._NoteTime;
			}
			set
			{
				if ((this._NoteTime != value))
				{
					this.OnNoteTimeChanging(value);
					this.SendPropertyChanging();
					this._NoteTime = value;
					this.SendPropertyChanged("NoteTime");
					this.OnNoteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCommend", DbType="Bit")]
		public System.Nullable<bool> IsCommend
		{
			get
			{
				return this._IsCommend;
			}
			set
			{
				if ((this._IsCommend != value))
				{
					this.OnIsCommendChanging(value);
					this.SendPropertyChanging();
					this._IsCommend = value;
					this.SendPropertyChanged("IsCommend");
					this.OnIsCommendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeId", DbType="Int")]
		public System.Nullable<int> NewsTypeId
		{
			get
			{
				return this._NewsTypeId;
			}
			set
			{
				if ((this._NewsTypeId != value))
				{
					this.OnNewsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeId = value;
					this.SendPropertyChanged("NewsTypeId");
					this.OnNewsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hits", DbType="Int")]
		public System.Nullable<int> Hits
		{
			get
			{
				return this._Hits;
			}
			set
			{
				if ((this._Hits != value))
				{
					this.OnHitsChanging(value);
					this.SendPropertyChanging();
					this._Hits = value;
					this.SendPropertyChanged("Hits");
					this.OnHitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShowTime
		{
			get
			{
				return this._ShowTime;
			}
			set
			{
				if ((this._ShowTime != value))
				{
					this.OnShowTimeChanging(value);
					this.SendPropertyChanging();
					this._ShowTime = value;
					this.SendPropertyChanged("ShowTime");
					this.OnShowTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsType")]
	public partial class NewsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsTypeId;
		
		private string _NewsType1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsTypeIdChanging(int value);
    partial void OnNewsTypeIdChanged();
    partial void OnNewsType1Changing(string value);
    partial void OnNewsType1Changed();
    #endregion
		
		public NewsType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsTypeId
		{
			get
			{
				return this._NewsTypeId;
			}
			set
			{
				if ((this._NewsTypeId != value))
				{
					this.OnNewsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeId = value;
					this.SendPropertyChanged("NewsTypeId");
					this.OnNewsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NewsType", Storage="_NewsType1", DbType="NVarChar(50)")]
		public string NewsType1
		{
			get
			{
				return this._NewsType1;
			}
			set
			{
				if ((this._NewsType1 != value))
				{
					this.OnNewsType1Changing(value);
					this.SendPropertyChanging();
					this._NewsType1 = value;
					this.SendPropertyChanged("NewsType1");
					this.OnNewsType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tradeleads")]
	public partial class Tradeleads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InfoId;
		
		private string _Title;
		
		private string _Province;
		
		private string _City;
		
		private string _Town;
		
		private string _Street;
		
		private string _Volume;
		
		private string _Price;
		
		private string _DetailInfo;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _TSId;
		
		private System.Nullable<int> _UnitID;
		
		private System.Nullable<System.DateTime> _ReleaseDate;
		
		private System.Nullable<int> _Hits;
		
		private System.Nullable<int> _TId;
		
		private string _PicPath;
		
		private System.Nullable<bool> _Audit;
		
		private System.Nullable<System.DateTime> _AuditDatetime;
		
		private System.Nullable<bool> _Recommend;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfoIdChanging(int value);
    partial void OnInfoIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnDetailInfoChanging(string value);
    partial void OnDetailInfoChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnTSIdChanging(System.Nullable<int> value);
    partial void OnTSIdChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseDateChanged();
    partial void OnHitsChanging(System.Nullable<int> value);
    partial void OnHitsChanged();
    partial void OnTIdChanging(System.Nullable<int> value);
    partial void OnTIdChanged();
    partial void OnPicPathChanging(string value);
    partial void OnPicPathChanged();
    partial void OnAuditChanging(System.Nullable<bool> value);
    partial void OnAuditChanged();
    partial void OnAuditDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDatetimeChanged();
    partial void OnRecommendChanging(System.Nullable<bool> value);
    partial void OnRecommendChanged();
    #endregion
		
		public Tradeleads()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infoId", Storage="_InfoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InfoId
		{
			get
			{
				return this._InfoId;
			}
			set
			{
				if ((this._InfoId != value))
				{
					this.OnInfoIdChanging(value);
					this.SendPropertyChanging();
					this._InfoId = value;
					this.SendPropertyChanged("InfoId");
					this.OnInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(50)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(50)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(50)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailInfo", DbType="NVarChar(100)")]
		public string DetailInfo
		{
			get
			{
				return this._DetailInfo;
			}
			set
			{
				if ((this._DetailInfo != value))
				{
					this.OnDetailInfoChanging(value);
					this.SendPropertyChanging();
					this._DetailInfo = value;
					this.SendPropertyChanged("DetailInfo");
					this.OnDetailInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSId", DbType="Int")]
		public System.Nullable<int> TSId
		{
			get
			{
				return this._TSId;
			}
			set
			{
				if ((this._TSId != value))
				{
					this.OnTSIdChanging(value);
					this.SendPropertyChanging();
					this._TSId = value;
					this.SendPropertyChanged("TSId");
					this.OnTSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
		public System.Nullable<int> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hits", DbType="Int")]
		public System.Nullable<int> Hits
		{
			get
			{
				return this._Hits;
			}
			set
			{
				if ((this._Hits != value))
				{
					this.OnHitsChanging(value);
					this.SendPropertyChanging();
					this._Hits = value;
					this.SendPropertyChanged("Hits");
					this.OnHitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="Int")]
		public System.Nullable<int> TId
		{
			get
			{
				return this._TId;
			}
			set
			{
				if ((this._TId != value))
				{
					this.OnTIdChanging(value);
					this.SendPropertyChanging();
					this._TId = value;
					this.SendPropertyChanged("TId");
					this.OnTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicPath", DbType="NVarChar(50)")]
		public string PicPath
		{
			get
			{
				return this._PicPath;
			}
			set
			{
				if ((this._PicPath != value))
				{
					this.OnPicPathChanging(value);
					this.SendPropertyChanging();
					this._PicPath = value;
					this.SendPropertyChanged("PicPath");
					this.OnPicPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audit", DbType="Bit")]
		public System.Nullable<bool> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDatetime
		{
			get
			{
				return this._AuditDatetime;
			}
			set
			{
				if ((this._AuditDatetime != value))
				{
					this.OnAuditDatetimeChanging(value);
					this.SendPropertyChanging();
					this._AuditDatetime = value;
					this.SendPropertyChanged("AuditDatetime");
					this.OnAuditDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recommend", DbType="Bit")]
		public System.Nullable<bool> Recommend
		{
			get
			{
				return this._Recommend;
			}
			set
			{
				if ((this._Recommend != value))
				{
					this.OnRecommendChanging(value);
					this.SendPropertyChanging();
					this._Recommend = value;
					this.SendPropertyChanged("Recommend");
					this.OnRecommendChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TruckInfo")]
	public partial class TruckInfo
	{
		
		private int _TruckId;
		
		private System.Nullable<int> _UserId;
		
		private string _Num;
		
		private string _TruckType;
		
		private string _TruckLength;
		
		private string _TruckLoad;
		
		private string _Brands;
		
		private string _DeliveryYear;
		
		private string _JSLicense;
		
		private System.Nullable<bool> _JSrLicenseAU;
		
		private string _XSLicense;
		
		private string _XSLicenseAU;
		
		public TruckInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TruckId
		{
			get
			{
				return this._TruckId;
			}
			set
			{
				if ((this._TruckId != value))
				{
					this._TruckId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="NVarChar(50)")]
		public string Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this._Num = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckType", DbType="NVarChar(50)")]
		public string TruckType
		{
			get
			{
				return this._TruckType;
			}
			set
			{
				if ((this._TruckType != value))
				{
					this._TruckType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckLength", DbType="NVarChar(50)")]
		public string TruckLength
		{
			get
			{
				return this._TruckLength;
			}
			set
			{
				if ((this._TruckLength != value))
				{
					this._TruckLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckLoad", DbType="NVarChar(50)")]
		public string TruckLoad
		{
			get
			{
				return this._TruckLoad;
			}
			set
			{
				if ((this._TruckLoad != value))
				{
					this._TruckLoad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brands", DbType="NVarChar(50)")]
		public string Brands
		{
			get
			{
				return this._Brands;
			}
			set
			{
				if ((this._Brands != value))
				{
					this._Brands = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryYear", DbType="NVarChar(50)")]
		public string DeliveryYear
		{
			get
			{
				return this._DeliveryYear;
			}
			set
			{
				if ((this._DeliveryYear != value))
				{
					this._DeliveryYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSLicense", DbType="NVarChar(50)")]
		public string JSLicense
		{
			get
			{
				return this._JSLicense;
			}
			set
			{
				if ((this._JSLicense != value))
				{
					this._JSLicense = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSrLicenseAU", DbType="Bit")]
		public System.Nullable<bool> JSrLicenseAU
		{
			get
			{
				return this._JSrLicenseAU;
			}
			set
			{
				if ((this._JSrLicenseAU != value))
				{
					this._JSrLicenseAU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XSLicense", DbType="NVarChar(50)")]
		public string XSLicense
		{
			get
			{
				return this._XSLicense;
			}
			set
			{
				if ((this._XSLicense != value))
				{
					this._XSLicense = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XSLicenseAU", DbType="NVarChar(50)")]
		public string XSLicenseAU
		{
			get
			{
				return this._XSLicenseAU;
			}
			set
			{
				if ((this._XSLicenseAU != value))
				{
					this._XSLicenseAU = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TSInfo")]
	public partial class TSInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TSId;
		
		private string _TSName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTSIdChanging(int value);
    partial void OnTSIdChanged();
    partial void OnTSNameChanging(string value);
    partial void OnTSNameChanged();
    #endregion
		
		public TSInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TSId
		{
			get
			{
				return this._TSId;
			}
			set
			{
				if ((this._TSId != value))
				{
					this.OnTSIdChanging(value);
					this.SendPropertyChanging();
					this._TSId = value;
					this.SendPropertyChanged("TSId");
					this.OnTSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSName", DbType="NVarChar(50)")]
		public string TSName
		{
			get
			{
				return this._TSName;
			}
			set
			{
				if ((this._TSName != value))
				{
					this.OnTSNameChanging(value);
					this.SendPropertyChanging();
					this._TSName = value;
					this.SendPropertyChanged("TSName");
					this.OnTSNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TSType")]
	public partial class TSType
	{
		
		private int _TId;
		
		private string _TSTypeName;
		
		public TSType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TId
		{
			get
			{
				return this._TId;
			}
			set
			{
				if ((this._TId != value))
				{
					this._TId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSTypeName", DbType="NVarChar(50)")]
		public string TSTypeName
		{
			get
			{
				return this._TSTypeName;
			}
			set
			{
				if ((this._TSTypeName != value))
				{
					this._TSTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitInfo")]
	public partial class UnitInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitId;
		
		private string _UnitName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    #endregion
		
		public UnitInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<int> _UserTypeId;
		
		private string _UserName;
		
		private string _MobilePhoneNum;
		
		private string _Province;
		
		private string _City;
		
		private string _Town;
		
		private string _Street;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _IDCard;
		
		private System.Nullable<bool> _IDAuthentication;
		
		private System.Nullable<bool> _Audit;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _BankName;
		
		private string _Account;
		
		private System.Nullable<bool> _ChopAuthentication;
		
		private string _Chop;
		
		private System.Nullable<bool> _InCharge;
		
		private System.Nullable<System.DateTime> _InChargeDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserTypeIdChanging(System.Nullable<int> value);
    partial void OnUserTypeIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnMobilePhoneNumChanging(string value);
    partial void OnMobilePhoneNumChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnIDAuthenticationChanging(System.Nullable<bool> value);
    partial void OnIDAuthenticationChanged();
    partial void OnAuditChanging(System.Nullable<bool> value);
    partial void OnAuditChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnChopAuthenticationChanging(System.Nullable<bool> value);
    partial void OnChopAuthenticationChanged();
    partial void OnChopChanging(string value);
    partial void OnChopChanged();
    partial void OnInChargeChanging(System.Nullable<bool> value);
    partial void OnInChargeChanged();
    partial void OnInChargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInChargeDateChanged();
    #endregion
		
		public UserInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int")]
		public System.Nullable<int> UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhoneNum", DbType="NVarChar(11)")]
		public string MobilePhoneNum
		{
			get
			{
				return this._MobilePhoneNum;
			}
			set
			{
				if ((this._MobilePhoneNum != value))
				{
					this.OnMobilePhoneNumChanging(value);
					this.SendPropertyChanging();
					this._MobilePhoneNum = value;
					this.SendPropertyChanged("MobilePhoneNum");
					this.OnMobilePhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(50)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(50)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAuthentication", DbType="Bit")]
		public System.Nullable<bool> IDAuthentication
		{
			get
			{
				return this._IDAuthentication;
			}
			set
			{
				if ((this._IDAuthentication != value))
				{
					this.OnIDAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._IDAuthentication = value;
					this.SendPropertyChanged("IDAuthentication");
					this.OnIDAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audit", DbType="Bit")]
		public System.Nullable<bool> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this.OnAuditChanging(value);
					this.SendPropertyChanging();
					this._Audit = value;
					this.SendPropertyChanged("Audit");
					this.OnAuditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChopAuthentication", DbType="Bit")]
		public System.Nullable<bool> ChopAuthentication
		{
			get
			{
				return this._ChopAuthentication;
			}
			set
			{
				if ((this._ChopAuthentication != value))
				{
					this.OnChopAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._ChopAuthentication = value;
					this.SendPropertyChanged("ChopAuthentication");
					this.OnChopAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chop", DbType="NVarChar(50)")]
		public string Chop
		{
			get
			{
				return this._Chop;
			}
			set
			{
				if ((this._Chop != value))
				{
					this.OnChopChanging(value);
					this.SendPropertyChanging();
					this._Chop = value;
					this.SendPropertyChanged("Chop");
					this.OnChopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCharge", DbType="Bit")]
		public System.Nullable<bool> InCharge
		{
			get
			{
				return this._InCharge;
			}
			set
			{
				if ((this._InCharge != value))
				{
					this.OnInChargeChanging(value);
					this.SendPropertyChanging();
					this._InCharge = value;
					this.SendPropertyChanged("InCharge");
					this.OnInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InChargeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InChargeDate
		{
			get
			{
				return this._InChargeDate;
			}
			set
			{
				if ((this._InChargeDate != value))
				{
					this.OnInChargeDateChanging(value);
					this.SendPropertyChanging();
					this._InChargeDate = value;
					this.SendPropertyChanged("InChargeDate");
					this.OnInChargeDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserNoticeInfo")]
	public partial class UserNoticeInfo
	{
		
		private System.Nullable<int> _NoticeId;
		
		private System.Nullable<int> _UserId;
		
		private string _UserNotice;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Hit;
		
		private System.Nullable<bool> _Audit;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		public UserNoticeInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeId", DbType="Int")]
		public System.Nullable<int> NoticeId
		{
			get
			{
				return this._NoticeId;
			}
			set
			{
				if ((this._NoticeId != value))
				{
					this._NoticeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNotice", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserNotice
		{
			get
			{
				return this._UserNotice;
			}
			set
			{
				if ((this._UserNotice != value))
				{
					this._UserNotice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hit", DbType="Int")]
		public System.Nullable<int> Hit
		{
			get
			{
				return this._Hit;
			}
			set
			{
				if ((this._Hit != value))
				{
					this._Hit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audit", DbType="Bit")]
		public System.Nullable<bool> Audit
		{
			get
			{
				return this._Audit;
			}
			set
			{
				if ((this._Audit != value))
				{
					this._Audit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTypeInfo")]
	public partial class UserTypeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeId;
		
		private string _UserTypeName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnUserTypeNameChanging(string value);
    partial void OnUserTypeNameChanged();
    #endregion
		
		public UserTypeInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeName", DbType="NVarChar(50)")]
		public string UserTypeName
		{
			get
			{
				return this._UserTypeName;
			}
			set
			{
				if ((this._UserTypeName != value))
				{
					this.OnUserTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UserTypeName = value;
					this.SendPropertyChanged("UserTypeName");
					this.OnUserTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Applications")]
	public partial class Vw_aspnet_Applications
	{
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		public Vw_aspnet_Applications()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this._LoweredApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_MembershipUsers")]
	public partial class Vw_aspnet_MembershipUsers
	{
		
		private System.Guid _UserId;
		
		private int _PasswordFormat;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public Vw_aspnet_MembershipUsers()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this._PasswordFormat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this._MobilePIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this._LoweredEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this._PasswordQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this._PasswordAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this._IsLockedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this._LastLockoutDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this._FailedPasswordAttemptCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this._FailedPasswordAttemptWindowStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this._FailedPasswordAnswerAttemptCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this._FailedPasswordAnswerAttemptWindowStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this._MobileAlias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this._IsAnonymous = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Profiles")]
	public partial class Vw_aspnet_Profiles
	{
		
		private System.Guid _UserId;
		
		private System.DateTime _LastUpdatedDate;
		
		private System.Nullable<int> _DataSize;
		
		public Vw_aspnet_Profiles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this._LastUpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSize", DbType="Int")]
		public System.Nullable<int> DataSize
		{
			get
			{
				return this._DataSize;
			}
			set
			{
				if ((this._DataSize != value))
				{
					this._DataSize = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Roles")]
	public partial class Vw_aspnet_Roles
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		public Vw_aspnet_Roles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this._LoweredRoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Users")]
	public partial class Vw_aspnet_Users
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public Vw_aspnet_Users()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this._LoweredUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this._MobileAlias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this._IsAnonymous = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_UsersInRoles")]
	public partial class Vw_aspnet_UsersInRoles
	{
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		public Vw_aspnet_UsersInRoles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_WebPartState_Paths")]
	public partial class Vw_aspnet_WebPartState_Paths
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		public Vw_aspnet_WebPartState_Paths()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this._PathId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this._LoweredPath = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_WebPartState_Shared")]
	public partial class Vw_aspnet_WebPartState_Shared
	{
		
		private System.Guid _PathId;
		
		private System.Nullable<int> _DataSize;
		
		private System.DateTime _LastUpdatedDate;
		
		public Vw_aspnet_WebPartState_Shared()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this._PathId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSize", DbType="Int")]
		public System.Nullable<int> DataSize
		{
			get
			{
				return this._DataSize;
			}
			set
			{
				if ((this._DataSize != value))
				{
					this._DataSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this._LastUpdatedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_WebPartState_User")]
	public partial class Vw_aspnet_WebPartState_User
	{
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<int> _DataSize;
		
		private System.DateTime _LastUpdatedDate;
		
		public Vw_aspnet_WebPartState_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this._PathId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSize", DbType="Int")]
		public System.Nullable<int> DataSize
		{
			get
			{
				return this._DataSize;
			}
			set
			{
				if ((this._DataSize != value))
				{
					this._DataSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this._LastUpdatedDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
